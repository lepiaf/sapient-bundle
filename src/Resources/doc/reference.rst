Reference
=======================

.. code-block:: yaml

    sapient:
        sign:
            enabled: boolean
            public: string
            private: string
            name: string
        seal:
            enabled: boolean
            public: string
            private: string
        guzzle_middleware:
            unseal: boolean
            verify: boolean
        sealing_public_keys:
            -
                name: string
                key: string
        verifying_public_keys:
            -
                name: string
                key: string

Above, you have full configuration reference.

.. sign:
sign
----

Enable signing response. If `sign` key is present, it must contain `public`, `private` and `name` property.
If not present, feature is disabled.

.. sign.public:
sign.public
-----------

Required if `sign` key is present.

It is signing public key string. It is generated by `SigningSecretKey::generate()` function.

.. sign.private:
sign.private
-----------

Required if `sign` key is present.

It is signing private key string. It is generated by `SigningSecretKey::generate()` function.
This key **must never** be revealed. If it is leaked, you must regenerate a new key pair.

.. sign.name:
sign.name
---------

Required if `sign` key is present.

Name of who sign response. It is required if client want to verifying signature in response.

.. seal:
seal
----

Enable sealing response. Sealing mean that response content is encrypted. Only receiver
with sealing private key can decrypt and reveal response content in clear. If `seal` key is present,
it must contain `public`, `private` and `name` property. If not present, feature is disabled.

.. seal.public:
seal.public
-----------

Required if `seal` key is present.

It is sealing public key string. It is generated by `SealingSecretKey::generate()` function.

.. seal.private:
seal.private
-----------

Required if `sign` key is present.

It is sealing private key string. It is generated by `SealingSecretKey::generate()` function.
This key **must never** be revealed. If it is leaked, you must regenerate a new key pair.
